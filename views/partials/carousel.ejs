<!-- <div id="default-carousel" class="relative w-full" data-carousel="slide">
    <div class="relative h-52 overflow-hidden md:h-96">
        <% const carouselItems = [
        { src: 'https://codeswear.nyc3.cdn.digitaloceanspaces.com/constants/landing/banner/1.webp', alt: '-' },
        { src: 'https://codeswear.nyc3.cdn.digitaloceanspaces.com/constants/landing/banner/2.webp', alt: '-' },
        { src: 'https://codeswear.nyc3.cdn.digitaloceanspaces.com/constants/landing/banner/3.webp', alt: '-' },
        { src: 'https://codeswear.nyc3.cdn.digitaloceanspaces.com/constants/landing/banner/4.webp', alt: '-' },
        { src: 'https://codeswear.nyc3.cdn.digitaloceanspaces.com/constants/landing/banner/5.webp', alt: '-' }
    ]; %>
        <% carouselItems.forEach((item, index) => { %>
        <div class="hidden duration-700 ease-in-out" data-carousel-item>
            <img src="<%= item.src %>" class="absolute block object-fill object-center -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 h-full w-full" alt="<%= item.alt %>">
        </div>
        <% }); %>
    </div>
    <section class="free absolute z-30 flex -translate-x-1/2 bottom-5 left-1/2 space-x-3 rtl:space-x-reverse">
        <% carouselItems.forEach((_, index) => { %>
        <button type="button" class="free w-3 h-3 rounded-full" aria-current="<%= index === 0 ? 'true' : 'false' %>" aria-label="Slide <%= index + 1 %>" data-carousel-slide-to="<%= index %>"></button>
        <% }); %>
    </section>
    <button type="button" class="free absolute top-0 left-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-prev>
        <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
            <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/>
            </svg>
            <span class="sr-only">Previous</span>
        </span>
    </button>
    <button type="button" class="free absolute top-0 right-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-next>
        <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
            <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
            </svg>
            <span class="sr-only">Next</span>
        </span>
    </button>
</div> -->

<!-- Disclaimer: The testimonials and restaurant name presented here are entirely fictional and created for demonstrational purposes only. Shining Yam is not a real establishment or enterprise. These fictional testimonials are designed to showcase the functionality of the Animated Testimonials component and do not represent real customer experiences or opinions. Any resemblance to actual persons, living or dead, or actual businesses is purely coincidental. This demonstration is intended solely for illustrative purposes in a web development context. -->
<!-- This component is based on https://ui.aceternity.com/components/animated-testimonials -->
<!-- Credit -->
<!-- https://www.perplexity.ai/ -->
<!-- Used Photos -->
<!-- https://unsplash.com/photos/woman-standing-beside-lights-xE87C_OvVO4?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash -->
<!-- https://unsplash.com/photos/man-in-gray-crew-neck-t-shirt-standing-beside-white-wall-MbYgpI1D-cA?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash -->
<!-- https://unsplash.com/photos/closed-eye-woman-wearing-brown-hat-YbzfTr0pwLE?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash -->
<div class="testimonial-container">
    <div class="testimonial-grid">
      <div class="image-container" id="image-container"></div>
      <div class="testimonial-content">
        <div>
          <h3 class="name dark:text-white" id="name"></h3>
          <p class="designation dark:text-gray-400" id="designation"></p>
          <p class="quote dark:text-gray-300" id="quote"></p>
        </div>
        <div class="arrow-buttons">
          <button class="arrow-button prev-button" id="prev-button">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
              <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" />
            </svg>
          </button>
          <button class="arrow-button next-button" id="next-button">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
              <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>

  <style>
    body,
html {
  height: 100%;
  margin: 0;
  padding: 0;
  justify-content: center; 
  font-family: sans-serif;
}
.testimonial-container {
  width: 98%;
  max-width: 56rem;
  padding: 2rem;
}
.testimonial-grid {
  display: grid;
  gap: 5rem;
}
.image-container {
  position: relative;
  width: 98%;
  height: 24rem;
  perspective: 1000px;
}
.testimonial-image {
  position: absolute;
  width: 98%;
  height: 100%;
  object-fit: cover;
  border-radius: 1.5rem;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
}
.testimonial-content {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.name {
  font-size: 1.5rem;
  font-weight: bold;
  color: #000;
  margin-bottom: 0.25rem;
}
.designation {
  font-size: 0.875rem;
  color: #6b7280;
  margin-bottom: 2rem;
}
.quote {
  font-size: 1.125rem;
  color: #4b5563;
  line-height: 1.75;
}
.arrow-buttons {
  display: flex;
  gap: 1rem;
  padding-top: 3rem;
}
.arrow-button {
  width: 1.75rem;
  height: 1.75rem;
  border-radius: 50%;
  background-color: #141414;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.3s;
}
.arrow-button:hover {
  background-color: #00a6fb;
}
.arrow-button svg {
  width: 1.25rem;
  height: 1.25rem;
  fill: #f1f1f7;
  transition: transform 0.3s;
}
.arrow-button:hover svg {
  fill: #ffffff;
}
@media (min-width: 768px) {
  .testimonial-grid {
    grid-template-columns: 1fr 1fr;
  }
  .arrow-buttons {
    padding-top: 0;
  }
}

</style>

<!-- Image opacity can be adjusted in const opacity = index === activeIndex ? 1 : 1; -->  
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>

<script>
const testimonials = [
            {
                quote: "Fashion is more than just clothing — it's expression, it's confidence. With every stitch, Kemistry Knots makes style speak louder. Truly a game-changer in the way we wear our identity.",
                name: "Muhammad Azeem",
                designation: "Kemistry Knots \"Allinone\"",
                src: "/images/premium_photo-.avif",
            },
            {
    quote: "These caps and mugs aren’t just items — they’re statements. The quality is top-notch and the designs are creative and bold. Every sip and every step feels a little more personalized now.",
    name: "Muhammad Azeem",
    designation: "Kemistry Knots \"Allinone\"",
    src: "https://img.drz.lazcdn.com/static/pk/p/21a4ce7a6095a5ae8cdbc4f5d1f46fbe.jpg_720x720q80.jpg" // Add image path here
  },
  {
    quote: "From browsing to unboxing, the experience was seamless. It’s rare to find products that look this good and feel even better. Highly recommended for anyone who values both form and function.",
    name: "Muhammad Azeem",
    designation: "Kemistry Knots \"Allinone\"",
    src: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSutd7ySDh_9Z3LXeKxj8N7ENztmoLsxxe45w&s" // Add image path here
  }
        ];

        let activeIndex = 0;
        const imageContainer = document.getElementById('image-container');
        const nameElement = document.getElementById('name');
        const designationElement = document.getElementById('designation');
        const quoteElement = document.getElementById('quote');
        const prevButton = document.getElementById('prev-button');
        const nextButton = document.getElementById('next-button');

        function calculateGap(width) {
            const minWidth = 1024;
            const maxWidth = 1456;
            const minGap = 60;
            const maxGap = 86;

            if (width <= minWidth) return minGap;
            if (width >= maxWidth) return Math.max(minGap, maxGap + 0.06018 * (width - maxWidth));

            return minGap + (maxGap - minGap) * ((width - minWidth) / (maxWidth - minWidth));
        }

        function updateTestimonial(direction) {
            const oldIndex = activeIndex;
            activeIndex = (activeIndex + direction + testimonials.length) % testimonials.length;

            const containerWidth = imageContainer.offsetWidth;
            const gap = calculateGap(containerWidth);
            const maxStickUp = gap * 0.8; // 80% of the calculated gap

            testimonials.forEach((testimonial, index) => {
                let img = imageContainer.querySelector(`[data-index="${index}"]`);
                if (!img) {
                    img = document.createElement('img');
                    img.src = testimonial.src;
                    img.alt = testimonial.name;
                    img.classList.add('testimonial-image');
                    img.dataset.index = index;
                    imageContainer.appendChild(img);
                }

                const offset = (index - activeIndex + testimonials.length) % testimonials.length;
                const zIndex = testimonials.length - Math.abs(offset);
                const opacity = index === activeIndex ? 1 : 1;
                const scale = index === activeIndex ? 1 : 0.85;

                let translateX, translateY, rotateY;
                if (offset === 0) {
                    translateX = '0%';
                    translateY = '0%';
                    rotateY = 0;
                } else if (offset === 1 || offset === -2) {
                    translateX = '20%';
                    translateY = `-${maxStickUp / img.offsetHeight * 100}%`;
                    rotateY = -15;
                } else {
                    translateX = '-20%';
                    translateY = `-${maxStickUp / img.offsetHeight * 100}%`;
                    rotateY = 15;
                }

                gsap.to(img, {
                    zIndex: zIndex,
                    opacity: opacity,
                    scale: scale,
                    x: translateX,
                    y: translateY,
                    rotateY: rotateY,
                    duration: 0.8,
                    ease: "power3.out"
                });
            });

            gsap.to([nameElement, designationElement], {
                opacity: 0,
                y: -20,
                duration: 0.3,
                ease: "power2.in",
                onComplete: () => {
                    nameElement.textContent = testimonials[activeIndex].name;
                    designationElement.textContent = testimonials[activeIndex].designation;
                    gsap.to([nameElement, designationElement], {
                        opacity: 1,
                        y: 0,
                        duration: 0.3,
                        ease: "power2.out"
                    });
                }
            });

            gsap.to(quoteElement, {
                opacity: 0,
                y: -20,
                duration: 0.3,
                ease: "power2.in",
                onComplete: () => {
                    quoteElement.innerHTML = testimonials[activeIndex].quote.split(' ').map(word => `<span class="word">${word}</span>`).join(' ');
                    gsap.to(quoteElement, {
                        opacity: 1,
                        y: 0,
                        duration: 0.3,
                        ease: "power2.out"
                    });
                    animateWords();
                }
            });
        }

        function animateWords() {
            gsap.from('.word', {
                opacity: 0,
                y: 10,
                stagger: 0.02,
                duration: 0.2,
                ease: "power2.out"
            });
        }

        function handleNext() {
            updateTestimonial(1);
        }

        function handlePrev() {
            updateTestimonial(-1);
        }

        prevButton.addEventListener('click', handlePrev);
        nextButton.addEventListener('click', handleNext);

        // Initial setup
        updateTestimonial(0);

        // Autoplay functionality
        const autoplayInterval = setInterval(handleNext, 5000);

        // Stop autoplay on user interaction
        [prevButton, nextButton].forEach(button => {
            button.addEventListener('click', () => {
                clearInterval(autoplayInterval);
            });
        });

        // Handle window resize
        window.addEventListener('resize', () => updateTestimonial(0));
</script>