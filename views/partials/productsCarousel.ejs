<section class="carousel" aria-label="Gallery">
  <ol class="carousel__viewport" id="carouselViewport">
    <% if (product && product.variants.length> 0) { %>
      <% let firstVariant=product.variants[0]; %>
        <% if (firstVariant.images && firstVariant.images.length> 0) { %>
          <% firstVariant.images.forEach((image, index)=> { %>
            <li class="carousel__slide" id="carousel__slide<%= index + 1 %>">
              <div class="carousel__snapper">
                <img src="<%= image %>" alt="Product Image <%= index + 1 %>">
              </div>
            </li>
            <% }) %>
              <% } %>
                <% } else { %>
                  <li class="carousel__slide">
                    <div class="carousel__snapper">
                      <p>No images available</p>
                    </div>
                  </li>
                  <% } %>


  </ol>
  <aside class="carousel__navigation">
    <ol class="carousel__navigation-list" id="carouselDots"></ol>
  </aside>
</section>

<style>
  .carousel {
    width: 100%;
    position: relative;
    top: 0;
    margin-top: 0;
    padding-top: 0;
  }

  .carousel__viewport {
    display: flex;
    scroll-snap-type: x mandatory;
    overflow-x: auto;
    scroll-behavior: smooth;
    scrollbar-width: none;
    /* Firefox */
    -ms-overflow-style: none;
    /* IE/Edge */
  }

  .carousel__viewport::-webkit-scrollbar {
    display: none;
    /* Chrome/Safari */
  }

  .carousel__slide {
    flex: 0 0 100%;
    scroll-snap-align: start;
    position: relative;
  }

  .carousel__snapper img {
    width: 100%;
    /* Make image responsive */
    height: 400px;
    /* Maintain aspect ratio */
    max-height: 400px;
    /* Adjust this based on design */
    object-fit: contain;
    /* Ensure the whole image is visible */
  }

  .carousel__navigation {
    display: flex;
    justify-content: center;
    margin-top: 10px;
  }

  .carousel__navigation-list {
    display: flex;
    gap: 10px;
    list-style: none;
    padding: 0;
  }

  .carousel__navigation-button {
    display: block;
    width: 12px;
    height: 12px;
    background-color: gray;
    border-radius: 50%;
    transition: background 0.3s;
  }

  .carousel__navigation-button.active {
    color: white;
    border: 2px solid white; /* White border for active dot */
    transform: scale(1.2);
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const viewport = document.getElementById("carouselViewport");
    const slides = document.querySelectorAll(".carousel__slide");
    const dotsContainer = document.getElementById("carouselDots");
    let currentIndex = 0;

    // Generate dots dynamically
    slides.forEach((slide, index) => {
      let dot = document.createElement("li");
      let link = document.createElement("button");
      link.className = "carousel__navigation-button";
      link.setAttribute("data-index", index);
      dot.appendChild(link);
      dotsContainer.appendChild(dot);
    });

    const dots = document.querySelectorAll(".carousel__navigation-button");

    // Function to update active dot
    function updateActiveDot(index) {
      dots.forEach(dot => dot.classList.remove("active"));
      dots[index].classList.add("active");
    }

    // Click event for dots navigation
    dots.forEach(dot => {
      dot.addEventListener("click", function () {
        currentIndex = parseInt(this.getAttribute("data-index"));
        viewport.scrollTo({
          left: slides[currentIndex].offsetLeft,
          behavior: "smooth"
        });
        updateActiveDot(currentIndex);
      });
    });

    // Auto slide function
    function autoSlide() {
      currentIndex = (currentIndex + 1) % slides.length;
      viewport.scrollTo({
        left: slides[currentIndex].offsetLeft,
        behavior: "smooth"
      });
      updateActiveDot(currentIndex);
    }

    // Start auto slide every 3 seconds
    let slideInterval = setInterval(autoSlide, 3000);

    // Pause auto-slide on manual interaction
    viewport.addEventListener("scroll", function () {
      clearInterval(slideInterval);
      slideInterval = setInterval(autoSlide, 3000);
    });

    // Initialize first active dot
    updateActiveDot(0);
  });
</script>